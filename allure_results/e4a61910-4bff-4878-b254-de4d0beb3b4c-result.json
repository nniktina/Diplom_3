{"name": "Проверка, залогиненный пользователь может оформить заказ", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.MoveTargetOutOfBoundsException: Message: Move target (388, 1097) is out of bounds of viewport dimensions (1728, 935)\nStacktrace:\nRemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nWebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:191:5\nMoveTargetOutOfBoundsError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:477:5\nassertInViewPort@chrome://remote/content/shared/webdriver/Actions.sys.mjs:2371:11\ndispatch@chrome://remote/content/shared/webdriver/Actions.sys.mjs:1316:21\ndispatch/pendingEvents<@chrome://remote/content/shared/webdriver/Actions.sys.mjs:2040:14\ndispatch@chrome://remote/content/shared/webdriver/Actions.sys.mjs:2039:39\ndispatch/chainEvents<@chrome://remote/content/shared/webdriver/Actions.sys.mjs:1950:27\ndispatch@chrome://remote/content/shared/webdriver/Actions.sys.mjs:1952:7\nperformActions@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:503:23\nreceiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:143:31", "trace": "self = <tests.test_main_functional.TestMainFunctional object at 0x102698b10>, driver = <selenium.webdriver.firefox.webdriver.WebDriver (session=\"c1d9d47f-bf3c-4eeb-afab-8100c6ba5529\")>\nlogin = ['bdavis@gmail.com', 'saxdn', 'Diana'], ingredient_1 = ('xpath', \"(//a[contains(@class, 'BurgerIngredient_ingredient')])[1]\")\ningredient_2 = ('xpath', \"(//a[contains(@class, 'BurgerIngredient_ingredient')])[7]\")\n\n    @pytest.mark.parametrize('ingredient_1, ingredient_2', [[MainPageLocators.BURGER_INGREDIENT_BUNS, MainPageLocators.BURGER_INGREDIENT_CUTLET]])\n    @allure.title('Проверка, залогиненный пользователь может оформить заказ')\n    def test_login_user_can_place_order(self, driver, login, ingredient_1, ingredient_2):\n        main_page = MainPage(driver)\n        main_page.open(Urls.URL_SB)\n        time.sleep(7)\n        main_page.click_on_login_in_account_button()\n        login_page = LoginPage(driver)\n        login_page.login_user(login[0], login[1])\n        main_page = MainPage(driver)\n        main_page.drag_ingredient_to_order(ingredient_1)\n        time.sleep(4)\n>       main_page.drag_ingredient_to_order(ingredient_2)\n\ntests/test_main_functional.py:82: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages/main_page.py:56: in drag_ingredient_to_order\n    self.drag_and_drop_on_to_element(draggable_locator, self.locators.BURGER_CONSTRUCTOR_BASKET)\npages/base_page.py:33: in drag_and_drop_on_to_element\n    self.scroll_to_element(self.element_is_presence(draggable_locator))\npages/base_page.py:25: in scroll_to_element\n    ActionChains(self.driver).scroll_to_element(locator).perform()\n.venv/lib/python3.11/site-packages/selenium/webdriver/common/action_chains.py:94: in perform\n    self.w3c_actions.perform()\n.venv/lib/python3.11/site-packages/selenium/webdriver/common/actions/action_builder.py:96: in perform\n    self.driver.execute(Command.W3C_ACTIONS, enc)\n.venv/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x1026f5d90>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"move target out of bounds\",\"message\":\"Move target (388, 1097) is out of b...ys.mjs:503:23\\\\nreceiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:143:31\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.MoveTargetOutOfBoundsException: Message: Move target (388, 1097) is out of bounds of viewport dimensions (1728, 935)\nE       Stacktrace:\nE       RemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nE       WebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:191:5\nE       MoveTargetOutOfBoundsError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:477:5\nE       assertInViewPort@chrome://remote/content/shared/webdriver/Actions.sys.mjs:2371:11\nE       dispatch@chrome://remote/content/shared/webdriver/Actions.sys.mjs:1316:21\nE       dispatch/pendingEvents<@chrome://remote/content/shared/webdriver/Actions.sys.mjs:2040:14\nE       dispatch@chrome://remote/content/shared/webdriver/Actions.sys.mjs:2039:39\nE       dispatch/chainEvents<@chrome://remote/content/shared/webdriver/Actions.sys.mjs:1950:27\nE       dispatch@chrome://remote/content/shared/webdriver/Actions.sys.mjs:1952:7\nE       performActions@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:503:23\nE       receiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:143:31\n\n.venv/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: MoveTargetOutOfBoundsException"}, "steps": [{"name": "Клик по кнопке \"Войти в аккаунт\"", "status": "passed", "start": 1706712448800, "stop": 1706712449053}, {"name": "Авторизоваться", "status": "passed", "parameters": [{"name": "email", "value": "'bdavis@gmail.com'"}, {"name": "password", "value": "'saxdn'"}], "start": 1706712449053, "stop": 1706712449145}, {"name": "Перетащить ингредиент в заказ", "status": "passed", "parameters": [{"name": "draggable_locator", "value": "('xpath', \"(//a[contains(@class, 'BurgerIngredient_ingredient')])[1]\")"}], "start": 1706712449146, "stop": 1706712450206}, {"name": "Перетащить ингредиент в заказ", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.MoveTargetOutOfBoundsException: Message: Move target (388, 1097) is out of bounds of viewport dimensions (1728, 935)\nStacktrace:\nRemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nWebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:191:5\nMoveTargetOutOfBoundsError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:477:5\nassertInViewPort@chrome://remote/content/shared/webdriver/Actions.sys.mjs:2371:11\ndispatch@chrome://remote/content/shared/webdriver/Actions.sys.mjs:1316:21\ndispatch/pendingEvents<@chrome://remote/content/shared/webdriver/Actions.sys.mjs:2040:14\ndispatch@chrome://remote/content/shared/webdriver/Actions.sys.mjs:2039:39\ndispatch/chainEvents<@chrome://remote/content/shared/webdriver/Actions.sys.mjs:1950:27\ndispatch@chrome://remote/content/shared/webdriver/Actions.sys.mjs:1952:7\nperformActions@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:503:23\nreceiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:143:31\n\n", "trace": "  File \"/Users/anastasia.nikitina/PycharmProjects/Diplom/Diplom_3/.venv/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/Users/anastasia.nikitina/PycharmProjects/Diplom/Diplom_3/pages/main_page.py\", line 56, in drag_ingredient_to_order\n    self.drag_and_drop_on_to_element(draggable_locator, self.locators.BURGER_CONSTRUCTOR_BASKET)\n  File \"/Users/anastasia.nikitina/PycharmProjects/Diplom/Diplom_3/pages/base_page.py\", line 33, in drag_and_drop_on_to_element\n    self.scroll_to_element(self.element_is_presence(draggable_locator))\n  File \"/Users/anastasia.nikitina/PycharmProjects/Diplom/Diplom_3/pages/base_page.py\", line 25, in scroll_to_element\n    ActionChains(self.driver).scroll_to_element(locator).perform()\n  File \"/Users/anastasia.nikitina/PycharmProjects/Diplom/Diplom_3/.venv/lib/python3.11/site-packages/selenium/webdriver/common/action_chains.py\", line 94, in perform\n    self.w3c_actions.perform()\n  File \"/Users/anastasia.nikitina/PycharmProjects/Diplom/Diplom_3/.venv/lib/python3.11/site-packages/selenium/webdriver/common/actions/action_builder.py\", line 96, in perform\n    self.driver.execute(Command.W3C_ACTIONS, enc)\n  File \"/Users/anastasia.nikitina/PycharmProjects/Diplom/Diplom_3/.venv/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 347, in execute\n    self.error_handler.check_response(response)\n  File \"/Users/anastasia.nikitina/PycharmProjects/Diplom/Diplom_3/.venv/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "parameters": [{"name": "draggable_locator", "value": "('xpath', \"(//a[contains(@class, 'BurgerIngredient_ingredient')])[7]\")"}], "start": 1706712454211, "stop": 1706712454218}], "parameters": [{"name": "driver", "value": "'firefox'"}, {"name": "ingredient_1", "value": "('xpath', \"(//a[contains(@class, 'BurgerIngredient_ingredient')])[1]\")"}, {"name": "ingredient_2", "value": "('xpath', \"(//a[contains(@class, 'BurgerIngredient_ingredient')])[7]\")"}], "start": 1706712440771, "stop": 1706712454221, "uuid": "f14b184e-38fe-4b2a-8010-9442a041ae30", "historyId": "54e145b4eff5066e72d7ab62d65cba16", "testCaseId": "d2986b26f69c0e089405413263cdc343", "fullName": "tests.test_main_functional.TestMainFunctional#test_login_user_can_place_order", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_main_functional"}, {"name": "subSuite", "value": "TestMainFunctional"}, {"name": "host", "value": "NastyaNikitina.local"}, {"name": "thread", "value": "97437-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_main_functional"}]}